service: serverlessproject
frameworkVersion: "3"

plugins:
    - serverless-offline

provider:
    name: aws
    runtime: nodejs12.x
    profile: serverlessUser
    # stage adn region below
    stage: dev
    region: eu-west-2
    environment:
        tableName: ${self:custom.tableName}
    iamRoleStatements:
        - Effect: Allow
          Action:
              - dynamodb:*
          Resource: '*'

custom:
    tableName: gig-data

functions:
    getUser:
        handler: lambdas/endpoints/getUser.handler
        events:
            - httpApi:
                path: /user/{id}
                method: GET
                #   cors: true
    getGigData:
        handler: lambdas/endpoints/getGigData.handler
        events:
            - httpApi:
                path: /get-gig-data/{id}
                method: GET
                #   cors: true


resources:
    Resources:
        MyDynamoDbTable:
            Type: AWS::DynamoDB::Table
            Properties:
                TableName: ${self:custom.tableName}
                AttributeDefinitions:
                    - AttributeName: id
                      AttributeType: S
                KeySchema:
                    - AttributeName: id
                      KeyType: HASH
                BillingMode: PAY_PER_REQUEST

