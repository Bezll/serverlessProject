service: serverlessproject

plugins:
    - serverless-offline

provider:
    name: aws
    runtime: nodejs12.x
    profile: serverlessUser
    stage: dev
    region: eu-west-2
    environment:
        tableName: ${self:custom.tableName}
    iamRoleStatements:
        - Effect: Allow
          Action:
              - dynamodb:*
              - sns:setSMSAttributes
              - sns:Publish
          Resource: '*'
    apiGateway:
        apiKeys:
            - FirstApiKey

custom:
    tableName: gig-data

functions:
    getUser:
        handler: lambdas/endpoints/getUser.handler
        events:
            - http:
                path: /user/{id}
                method: GET
                cors: true
    getGigData:
        handler: lambdas/endpoints/getGigData.handler
        events:
            - http:
                path: /get-gig-data/{id}
                method: GET
                cors: true
                private: true
    createGigData:
        handler: lambdas/endpoints/createGigData.handler
        events:
            - http:
                path: /create-gig-data/{id}
                method: POST
                cors: true
                private: true
    sendSMS:
        handler: lambdas/endpoints/sendSMS.handler
        events:
            - http:
                path: /send-sms
                method: POST
                cors: true
                private: true


resources:
    Resources:
        MyDynamoDbTable:
            Type: AWS::DynamoDB::Table
            Properties:
                TableName: ${self:custom.tableName}
                AttributeDefinitions:
                    - AttributeName: id
                      AttributeType: S
                KeySchema:
                    - AttributeName: id
                      KeyType: HASH
                BillingMode: PAY_PER_REQUEST

